# READ GROUND TRUTH
# the ground truth data directory
ground_truth_directory: acousticbrainz-datasets
# classes with features locally: danceability, gender, genre_rosamerica, moods_claurier, moods_mirex, timbre_bright_dark
# classes with features locally: tonal_atonal, voice_instrumental
# classes with features online: genre_dortmund, genre_electronic, genre_tzanetakis, ismir04_rhythm,
class_dir: danceability
enumeration_columns: ['tonal_chords_key', 'tonal_chords_scale', 'tonal_key_key', 'tonal_key_scale']
# remove the unnecessary DF columns before training (it will also be deleted the class name column)
remove_columns: ['json_directory',  'track']
exports_directory: exports
evaluations_directory: evaluations
tracks_in_csv_format: tracks_csv
delete_logs: True
# logs directory
log_directory: logs
logging_level: 0

# PRE-PROCESSING
scaling: standard_scaled  # values: normalize_scaled, minmax_scaled, standard_scaled, robust_scaled
# List of parameters that have to be excluded before applying the preprocessing steps
excludedDescriptors: [ 'metadata.tags*' ]
# List of preprocessed datasets to build
processing:
    # it is possible to not apply any processing, although this is of
    # of little value in real-life tests and evaluations
    raw: []

    basic:
      preprocess:
        - transfo: remove
          params: { descriptorNames: &unusedDescs [ 'metadata.*', '*dmean*', '*dvar*',
                                                    '*.min', '*.max', '*cov',
                                                    'tonal.thpcp', # because of division by zero
                                                    'lowlevel.spectral_energyband_high.*', # 0 for low samplerate
                                                    'lowlevel.silence_rate*' # funky behavior in general
                                                    ] }
        - transfo: enumerate
          params: { descriptorNames: &stringDescs [ # 'rhythm.perceptual_tempo', # removed from new extractor
                                                    'tonal.chords_key', 'tonal.chords_scale',
                                                    'tonal.key_key', 'tonal.key_scale' ] }

    lowlevel:
      preprocess:
        # note that the order of the transformations is important!
        - transfo: remove
          params: { descriptorNames: *unusedDescs }
        - transfo: enumerate
          params: { descriptorNames: *stringDescs }
        - transfo: select
          params: { descriptorNames: 'lowlevel*' }

    nobands:
      preprocess:
        - transfo: remove
          params: { descriptorNames: *unusedDescs }
        - transfo: enumerate
          params: { descriptorNames: *stringDescs }
        - transfo: remove
          params: { descriptorNames: [ 'barkbands*', '*energyband*', 'melbands*', 'erbbands*' ] }

    normalized:
      preprocess:
        - transfo: remove
          params: { descriptorNames: *unusedDescs }
        - transfo: enumerate
          params: { descriptorNames: *stringDescs }
      postprocess:
        - transfo: normalize  # MixMax Scale

    gaussianized:
      preprocess:
        - transfo: remove
          params: { descriptorNames: *unusedDescs }
        - transfo: enumerate
          params: { descriptorNames: *stringDescs }
      postprocess:
        - transfo: normalize
        - transfo: gaussianize
          params: { descriptorNames: ['lowlevel.*'] }

    mfcc:
      preprocess:
        # an MFCC only baseline
        - transfo: remove
          params: { descriptorNames: *unusedDescs }
        - transfo: enumerate
          params: { descriptorNames: *stringDescs }
        - transfo: select
          params: { descriptorNames: ['lowlevel.mfcc*'] }

classifiers:
    svm:
        # first svm test combinations
        - processing: [ 'basic', 'lowlevel', 'nobands', 'normalized', 'gaussianized', 'mfcc' ]

# gaia data
gaia_imitation: True
gaia_kfold_cv_n_splits: 5
gaia_kfold_shuffle: False
gaia_kfold_random_state: null
# set null to get the seed from the clock value, otherwise specify a number
random_seed: 1

## ML SETTINGS
# train kind: grid_svm, svm, deep_learning, supervised_lb
train_kind: svm

# svc hyperparameters
svc_C: 7  # C: float, default=1.0
svc_kernel: rbf  # kernel: {‘linear’, ‘poly’, ‘rbf’, ‘sigmoid’, ‘precomputed’}, default=’rbf’
svc_gamma: -11  # gamma: {‘scale’, ‘auto’} or float, default=’scale’
svc_class_weight_balance: null  # class_weight: dict or ‘balanced’, default=None
svc_probability: True

# k-fold hyperparameters
k_fold_apply: True
k_fold: 5
# GRID ML SETTINGS
#
pca_n_components: .95
grid_kernel: ['poly', 'rbf']
#grid_C: [0.001, 0.01, 0.1, 1, 3, 5, 7, 9, 10, 11, 100]
#grid_gamma: [0.001, 0.01, 0.1, 1, 3, 5, 7, 9, 10, 11, 100]
grid_C: [-5, -3, -1, 1, 3, 5, 7, 9, 11]  # will actually be 2**x
grid_gamma: [3, 1, -1, -3, -5, -7, -9, -11]  # will actually be 2**x
grid_class_weight: ['balanced', null]

# shuffle: True or False
shuffle: True
# set to -1 if you want to exploit all processors. Set to null if you want to exploit only 1 processor
parallel_jobs: -1
grid_results_directory: grid_scores

# NEURAL NETWORK SETTINGS
#
